let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [ID = _t, AA = _t, #"Set     (1, 2)" = _t, #"Proposal title" = _t, #"Mitigation score (0, 1, 2)" = _t, #"Criteria met on mitigation" = _t, #"Mitigation Indicator " = _t, #"Adaptation score (0, 1, 2)" = _t, #"Criteria met on adaptation" = _t, #"Adaptation Indicator " = _t]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"ID", type text}, {"AA", type text}, {"Set     (1, 2)", Int64.Type}, {"Proposal title", type text}, {"Mitigation score (0, 1, 2)", Int64.Type}, {"Criteria met on mitigation", type text}, {"Mitigation Indicator ", type text}, {"Adaptation score (0, 1, 2)", Int64.Type}, {"Criteria met on adaptation", type text}, {"Adaptation Indicator ", type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Changed Type","INIT","INIT-",Replacer.ReplaceText,{"ID"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","","No Information Provided",Replacer.ReplaceValue,{"Mitigation Indicator "}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1","// Fine-tuning/adapting plant health innovations under the changing climate scenarios.","Fine-tuning/adapting plant health innovations under the changing climate scenarios.",Replacer.ReplaceValue,{"Adaptation Indicator "}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2",": # climate adaptation investments","# climate adaptation investments",Replacer.ReplaceText,{"Adaptation Indicator "}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3","","Data not Provided",Replacer.ReplaceValue,{"Adaptation Indicator "}),
    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4","Data not Provided","Information not Provided",Replacer.ReplaceText,{"Adaptation Indicator "}),
    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5","No Information Provided","Information not Provided",Replacer.ReplaceText,{"Mitigation Indicator "}),
    #"Replaced Value7" = Table.ReplaceValue(#"Replaced Value6"," # peoplebenefiting from climate-adapted innovations","# people benefiting from climate-adapted innovations",Replacer.ReplaceText,{"Adaptation Indicator "}),
    #"Replaced Value8" = Table.ReplaceValue(#"Replaced Value7","#Peoplebenefiting","# People benefiting",Replacer.ReplaceText,{"Adaptation Indicator "})
in
    #"Replaced Value8"