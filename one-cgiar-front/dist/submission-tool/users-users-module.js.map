{"version":3,"sources":["./src/app/pages/admin/users/users-routing.module.ts","./src/app/pages/admin/users/users.component.ts","./src/app/pages/admin/users/users.component.html","./src/app/pages/admin/users/users.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEJ;;;AAEnD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,CAAC,CAAC;AAM1D,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAQpB;AACsC;AACZ;AAEsB;AACxC;;;;;;;;ICC3B,yEAAsD;IAAA,8DAAG;IAAA,4DAAK;;;IAC9D,yEAAuC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,+EAAgB;;;IAKvD,yEAAsD;IAAA,+DAAI;IAAA,4DAAK;;;IAC/D,yEAAuC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,iFAAkB;;;IAKzD,yEAAsD;IAAA,gEAAK;IAAA,4DAAK;;;IAChE,yEAAuC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,kFAAmB;;;IAI1D,yEAAsD;IAAA,kEAAO;IAAA,4DAAK;;;;IAClE,yEACE;IAAA,yEACE;IAAA,6EACE;IADqC,qWAA8B;IACnE,iEACF;IAAA,4DAAS;IACT,6EACE;IADmC,qWAA8B;IACjE,mEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAK;;;IAGP,oEAA4D;;;IAC5D,oEAAiE;;AD1B5D,MAAM,cAAc;IAOzB,YAAoB,OAAqB,EAAU,MAAiB;QAAhD,YAAO,GAAP,OAAO,CAAc;QAAU,WAAM,GAAN,MAAM,CAAW;QANpE,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAChE,eAAU,GAAG,IAAI,0EAAkB,EAAE,CAAC;QAE9B,aAAQ,GAAG,IAAI,4CAAO,EAAO,CAAC;IAGiC,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACxC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IACD,QAAQ,CAAC,MAAc;QACrB,IAAI,MAAM,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE;YACzD,IAAI,CAAC,OAAO;iBACT,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClB,yCAAyC;gBACzC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;oBACxC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,WAAW,CAAC,IAAI,GAAG,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5B,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAc,EAAE;YAC/C,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,OAAO;YACd,WAAW,EAAE,KAAK;YAClB,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;SAClC,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,EAAE,EAAE,OAAO,MAAM,CAAC,CAAC;YACvD,uCAAuC;YACvC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;gBACxC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;;4EArDU,cAAc;8FAAd,cAAc;kEAMd,8DAAO;;;;;QCzBpB,yEACE;QAAA,4EAME;QALA,sIAAS,iBAAa,IAAC;QAKvB,oEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,2EACE;QACA,2EACE;QAAA,wGAAsD;QACtD,wGAAuC;QACzC,qEAAe;QAGf,2EACE;QAAA,wGAAsD;QACtD,wGAAuC;QACzC,qEAAe;QAGf,4EACE;QAAA,0GAAsD;QACtD,0GAAuC;QACzC,qEAAe;QAEf,4EACE;QAAA,0GAAsD;QACtD,0GACE;QASJ,qEAAe;QAEf,0GAAuD;QACvD,2GAA4D;QAC9D,4DAAQ;;QAnCS,0DAAyB;QAAzB,sFAAyB;QAiCrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAA+C;QAA/C,kGAA+C;;6FD1BhD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;kMAOqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;;;;;;;;;;;;;;AEzBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEa;AACT;AACG;;AAM/C,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAFb,CAAC,4DAAY,EAAE,wEAAkB,EAAE,mEAAc,CAAC;mIAEhD,WAAW,mBAHP,+DAAc,aACnB,4DAAY,EAAE,wEAAkB,EAAE,mEAAc;6FAE/C,WAAW;cAJvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,+DAAc,CAAC;gBAC9B,OAAO,EAAE,CAAC,4DAAY,EAAE,wEAAkB,EAAE,mEAAc,CAAC;aAC5D","file":"users-users-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsersComponent } from './users.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UsersComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { UsersService } from './../services/users.service';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalComponent } from './../components/modal/modal.component';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss'],\r\n})\r\nexport class UsersComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  displayedColumns: string[] = ['id', 'role', 'email', 'actions'];\r\n  dataSource = new MatTableDataSource();\r\n\r\n  private destroy$ = new Subject<any>();\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private userSvc: UsersService, private dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userSvc.getAll().subscribe((users) => {\r\n      this.dataSource.data = users;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  onDelete(userId: number): void {\r\n    if (window.confirm('Do you really want remove this user')) {\r\n      this.userSvc\r\n        .delete(userId)\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe((res) => {\r\n          window.alert(res);\r\n          // Update result after deleting the user.\r\n          this.userSvc.getAll().subscribe((users) => {\r\n            this.dataSource.data = users;\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  onOpenModal(user = {}): void {\r\n    console.log('User->', user);\r\n    let dialogRef = this.dialog.open(ModalComponent, {\r\n      height: '400px',\r\n      width: '600px',\r\n      hasBackdrop: false,\r\n      data: { title: 'New user', user },\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`, typeof result);\r\n      // Update result after adding new user.\r\n      this.userSvc.getAll().subscribe((users) => {\r\n        this.dataSource.data = users;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next({});\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"table-button-row\">\r\n  <button\r\n    (click)=\"onOpenModal()\"\r\n    mat-flat-button\r\n    color=\"primary\"\r\n    class=\"btn-new\"\r\n  >\r\n    Add new\r\n  </button>\r\n</div>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\r\n  <!-- ID Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n  </ng-container>\r\n\r\n  <!-- Role Column -->\r\n  <ng-container matColumnDef=\"role\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.role }}</td>\r\n  </ng-container>\r\n\r\n  <!-- Email Column -->\r\n  <ng-container matColumnDef=\"email\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <div class=\"table-button-row\">\r\n        <button mat-flat-button color=\"accent\" (click)=\"onOpenModal(element)\">\r\n          Edit\r\n        </button>\r\n        <button mat-flat-button color=\"warn\" (click)=\"onDelete(element.id)\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n</table>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UsersComponent } from './users.component';\r\nimport { MaterialModule } from '@app/material.module';\r\n\r\n@NgModule({\r\n  declarations: [UsersComponent],\r\n  imports: [CommonModule, UsersRoutingModule, MaterialModule],\r\n})\r\nexport class UsersModule {}\r\n"],"sourceRoot":"webpack:///"}