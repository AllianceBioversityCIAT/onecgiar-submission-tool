{"version":3,"sources":["./src/app/pages/admin/admin-routing.module.ts","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html","./src/app/pages/admin/admin.module.ts","./src/app/pages/admin/components/modal/modal.component.ts","./src/app/pages/admin/components/modal/modal.component.html","./src/app/pages/admin/services/users.service.ts"],"names":[],"mappings":"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","file":"pages-admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminComponent } from './admin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AdminComponent },\r\n  {\r\n    path: 'users',\r\n    loadChildren: () =>\r\n      import('./users/users.module').then((m) => m.UsersModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin works!</p>\r\n","import { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AdminComponent } from './admin.component';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport { MaterialModule } from '@app/material.module';\r\n\r\n@NgModule({\r\n  declarations: [AdminComponent, ModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n","import { UsersService } from './../../services/users.service';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { BaseFormUser } from '@shared/utils/base-form-user';\r\nenum Action {\r\n  EDIT = 'edit',\r\n  NEW = 'new',\r\n}\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss'],\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  actionTODO = Action.NEW;\r\n  showPasswordField = true;\r\n  hide = true;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public userForm: BaseFormUser,\r\n    private userSvc: UsersService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.data?.user.hasOwnProperty('id')) {\r\n      this.actionTODO = Action.EDIT;\r\n      this.showPasswordField = false;\r\n      this.userForm.baseForm.get('password').setValidators(null);\r\n      this.userForm.baseForm.updateValueAndValidity();\r\n      this.data.title = 'Edit user';\r\n      this.pathFormData();\r\n    }\r\n  }\r\n\r\n  onSave(): void {\r\n    const formValue = this.userForm.baseForm.value;\r\n    if (this.actionTODO === Action.NEW) {\r\n      this.userSvc.new(formValue).subscribe((res) => {\r\n        console.log('New ', res);\r\n      });\r\n    } else {\r\n      const userId = this.data?.user?.id;\r\n      this.userSvc.update(userId, formValue).subscribe((res) => {\r\n        console.log('Update', res);\r\n      });\r\n    }\r\n  }\r\n\r\n  checkField(field: string): boolean {\r\n    return this.userForm.isValidField(field);\r\n  }\r\n\r\n  private pathFormData(): void {\r\n    this.userForm.baseForm.patchValue({\r\n      email: this.data?.user?.email,\r\n      role: this.data?.user?.role,\r\n    });\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{ data?.title }}</h2>\r\n<mat-dialog-content>\r\n  <div class=\"modal-form\">\r\n    <form [formGroup]=\"userForm.baseForm\">\r\n      <mat-form-field class=\"full-width-input\">\r\n        <input\r\n          formControlName=\"email\"\r\n          matInput\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <mat-error *ngIf=\"checkField('email')\">\r\n          {{ userForm.errorMessage }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width-input\" *ngIf=\"showPasswordField\">\r\n        <input\r\n          [type]=\"hide ? 'password' : 'text'\"\r\n          formControlName=\"password\"\r\n          matInput\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\">\r\n          <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"checkField('password')\">\r\n          {{ userForm.errorMessage }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width-input\">\r\n        <mat-label>Select </mat-label>\r\n        <mat-select formControlName=\"role\">\r\n          <mat-option value=\"suscriptor\">Suscriptor</mat-option>\r\n          <mat-option value=\"admin\">Admin</mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"checkField('role')\">\r\n          {{ userForm.errorMessage }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-raised-button\r\n    [mat-dialog-close]=\"true\"\r\n    color=\"primary\"\r\n    (click)=\"onSave()\"\r\n    ckdFocusInitial\r\n    [disabled]=\"!userForm.baseForm.valid\"\r\n  >\r\n    Save\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { catchError } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { User } from '@app/shared/models/user.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<User[]> {\r\n    return this.http\r\n      .get<User[]>(`${environment.API_URL}/users`)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  getById(userId: number): Observable<User> {\r\n    return this.http\r\n      .get<any>(`${environment.API_URL}/users/${userId}`)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  new(user: User): Observable<User> {\r\n    return this.http\r\n      .post<User>(`${environment.API_URL}/users`, user)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  update(userId: number, user: User): Observable<User> {\r\n    return this.http\r\n      .patch<User>(`${environment.API_URL}/users/${userId}`, user)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  delete(userId: number): Observable<{}> {\r\n    return this.http\r\n      .delete<User>(`${environment.API_URL}/users/${userId}`)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  handlerError(error): Observable<never> {\r\n    let errorMessage = 'Error unknown';\r\n    if (error) {\r\n      errorMessage = `Error ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}